name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: Add EC2 to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          HOST: ${{ secrets.EC2_HOST }}
          USER: ${{ secrets.EC2_USER }}
          APP_PATH: ${{ secrets.EC2_PATH }}
        run: |
          ssh ${USER}@${HOST} << 'EOF'
            set -e
            
            echo "🚀 Starting deployment..."
            
            # Navegar al directorio del proyecto
            cd ${{ secrets.EC2_PATH }}
            
            # Hacer pull del último código
            echo "📥 Pulling latest code from main..."
            git pull origin main
            
            # Instalar/actualizar dependencias de Composer
            echo "📦 Installing Composer dependencies..."
            composer install --no-dev --optimize-autoloader --no-interaction
            
            # Instalar/actualizar dependencias de NPM (si usas assets)
            # echo "📦 Installing NPM dependencies..."
            # npm install
            # npm run build
            
            # Ejecutar migraciones
            echo "🗄️ Running migrations..."
            php artisan migrate --force
            
            # Limpiar y optimizar caches
            echo "🧹 Clearing caches..."
            php artisan config:cache
            php artisan route:cache
            php artisan optimize
            
            # Ajustar permisos
            echo "🔐 Setting permissions..."
            sudo chown -R www-data:www-data storage bootstrap/cache
            sudo chmod -R 775 storage bootstrap/cache
            
            # Reiniciar servicios (si usas queue workers o supervisor)
            # echo "🔄 Restarting queue workers..."
            # php artisan queue:restart
            # sudo supervisorctl restart laravel-worker:*
            
            echo "✅ Deployment completed successfully!"
          EOF

      - name: Deployment Status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment failed!"
            exit 1
          fi
